#!/bin/bash

CONFIG_FILE=${PWD}/src/settings.prod.conf

PING_POSTGRES_PASSWORD=$(gpg --pinentry-mode=loopback --passphrase "${PING_GPG_PASS}" \
                                -d ${PWD}/secrets/postgresql.gpg 2>/dev/null)
PING_KAFKA_PASSWORD=$(gpg --pinentry-mode=loopback --passphrase "${PING_GPG_PASS}" \
                                -d ${PWD}/secrets/kafka.gpg 2>/dev/null)

CA_CERT_FILE=ca.pem
gpg --pinentry-mode=loopback --passphrase "${PING_GPG_PASS}" \
    -d ${PWD}/secrets/ca_cert.gpg 2>/dev/null 1>$CA_CERT_FILE
echo "Created: ${CA_CERT_FILE}"

cat > $CONFIG_FILE <<-EOF
;
; Automatically generated by:
;   ${0}
;
[website]
domain=github.com
; urls should be valid JSON: an array of string arrays,
; each string array is a pair: [<url>, <expected_content>]
urls=[
    ["https://github.com", "Sign up for GitHub"],
    ["https://github.com/python", "The Python programming language"]
    ]
; ping interval in seconds
sleep=60

[postgresql]
dbname=defaultdb
host=ping-pg-dcvetinovic-515a.aivencloud.com
port=19993
user=avnadmin
password=${PING_POSTGRES_PASSWORD}
timezone=Europe/Berlin


[kafka]
topic=ping
host=ping-kafka-dcvetinovic-515a.aivencloud.com
port=20006
user=avnadmin
password=${PING_KAFKA_PASSWORD}
security_protocol=SASL_SSL
ssl_cafile=${CA_CERT_FILE}
; Kafka's message schema, should be a valid JSON struct/object
schema={
    "type" : "object",
    "properties" : {
        "url" : {"type" : "string"},
        "status_code" : {"type" : "number"},
        "timestamp" : {"type" : "string"},
        "response_time" : {"type" : "number"},
        "has_content" : {"type" : "boolean"}
    },
    "required": ["url", "status_code", "timestamp", "response_time", "has_content"],
    "additionalProperties": false
    }

[logging]
file_path=/tmp/ping_service.log
max_bytes=2000
max_backups=5
level=INFO
format=%%(asctime)s - %%(name)s - %%(levelname)s - %%(message)s

[status_codes]
;
; Sources:
;    https://tools.ietf.org/html/rfc7231,
;    https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
;
100=Continue
101=Switching Protocols
102=Processing
103=Early Hints
200=OK
201=Created
202=Accepted
203=Non-Authoritative Information
204=No Content
205=Reset Content
206=Partial Content
207=Multi-Status
208=Already Reported
218=This is fine
226=IM Used
300=Multiple Choices
301=Moved Permanently
302=Found
303=See Other
304=Not Modified
305=Use Proxy
306=Switch Proxy
307=Temporary Redirect
308=Permanent Redirect
400=Bad Request
401=Unauthorized
402=Payment Required
403=Forbidden
404=Not Found
405=Method Not Allowed
406=Not Acceptable
407=Proxy Authentication Required
408=Request Timeout
409=Conflict
410=Gone
411=Length Required
412=Precondition Failed
413=Payload Too Large
414=URI Too Long
415=Unsupported Media Type
416=Range Not Satisfiable
417=Expectation Failed
418=I'm a teapot
419=Page Expired
420=Method Failure \(Spring Framework\) or Enhance Your Calm (Twitter Search and Trends API v.1.0)
421=Misdirected Request
422=Unprocessable Entity
423=Locked
424=Failed Dependency
425=Too Early
426=Upgrade Required
428=Precondition Required
429=Too Many Requests
430=Request Header Fields Too Large (Shopify)
431=Request Header Fields Too Large
440=Login Time-out (IIS Microsoft)
444=No Response (nginx)
449=Retry With (IIS Microsoft)
450=Blocked by Windows Parental Controls (Microsoft)
451=Unavailable For Legal Reasons (RFC 7725) or Redirect  (IIS Microsoft)
460=Client closed the connection with the load balancer before the idle timeout period elapsed (AWS ELB)
463=The load balancer received an X-Forwarded-For request header with more than 30 IP addresses (AWS ELB)
494=Request header too large (nginx)
495=SSL Certificate Error (nginx)
496=SSL Certificate Required (nginx)
497=HTTP Request Sent to HTTPS Port (nginx)
499=Client Closed Request (nginx) or Token Required (Esri)
498=Invalid Token (Esri)
500=Internal Server Error
501=Not Implemented
502=Bad Gateway
503=Service Unavailable
504=Gateway Timeout
505=HTTP Version Not Supported
506=Variant Also Negotiates
507=Insufficient Storage
508=Loop Detected
509=Bandwidth Limit Exceeded
510=Not Extended
511=Network Authentication Required
520=Web Server Returned an Unknown Error (Cloudflare)
521=Web Server Is Down (Cloudflare)
522=Connection Timed Out (Cloudflare)
523=Origin Is Unreachable (Cloudflare)
524=A Timeout Occurred (Cloudflare)
525=SSL Handshake Failed (Cloudflare)
526=Invalid SSL Certificate
527=Railgun Error (Cloudflare)
529=Site is overloaded
530=Site is frozen or Returned along with a 1xxx error (Cloudflare)
598=(Informal convention) Network read timeout error
EOF

echo "Created: ${CONFIG_FILE}"
